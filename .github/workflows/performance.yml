name: Performance Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 0' # Weekly on Sunday at 3 AM

jobs:
  performance-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r backend/requirements-test.txt
        
    - name: Start Redis
      run: |
        sudo apt-get update
        sudo apt-get install redis-server
        sudo systemctl start redis-server
        
    - name: Run performance tests
      run: |
        cd backend
        python -m pytest tests/performance/ -v --tb=short
        
    - name: Generate performance report
      run: |
        cd backend
        python -m pytest tests/performance/ -v --tb=short --html=performance-report.html --self-contained-html
        
    - name: Upload performance report
      uses: actions/upload-artifact@v4
      with:
        name: performance-report
        path: backend/performance-report.html

  load-test:
    runs-on: ubuntu-latest
    needs: performance-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Start application
      run: |
        docker-compose up -d
        sleep 60  # Wait for application to start
        
    - name: Run load tests
      run: |
        # Install k6 for load testing
        sudo gpg -k
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
        
        # Create load test script
        cat > load-test.js << 'EOF'
        import http from 'k6/http';
        import { check, sleep } from 'k6';
        
        export let options = {
          stages: [
            { duration: '2m', target: 10 },
            { duration: '5m', target: 10 },
            { duration: '2m', target: 0 },
          ],
        };
        
        export default function () {
          let response = http.get('http://localhost/api/v1/pokemon');
          check(response, {
            'status is 200': (r) => r.status === 200,
            'response time < 500ms': (r) => r.timings.duration < 500,
          });
          sleep(1);
        }
        EOF
        
        # Run load test
        k6 run load-test.js
        
    - name: Clean up
      run: |
        docker-compose down
