name: Continuous Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository }}/pokedex
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Pokedex application
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/pokedex:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        chmod +x ./scripts/deploy.sh
        ./scripts/deploy.sh staging ${{ github.sha }}
      env:
        DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        REDIS_URL: ${{ secrets.STAGING_REDIS_URL }}
        JWT_SECRET_KEY: ${{ secrets.STAGING_JWT_SECRET_KEY }}
        
    - name: Run smoke tests
      run: |
        echo "Running smoke tests on staging..."
        chmod +x ./scripts/health-check.sh
        ./scripts/health-check.sh http://localhost http://localhost/api/v1
        
    - name: Notify deployment success
      run: |
        echo "Staging deployment successful!"
        echo "ðŸš€ Pokedex deployed to staging with image: ghcr.io/${{ github.repository }}/pokedex:${{ github.sha }}"

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment: production
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        chmod +x ./scripts/deploy.sh
        ./scripts/deploy.sh production ${{ github.sha }}
      env:
        DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
        REDIS_URL: ${{ secrets.PRODUCTION_REDIS_URL }}
        JWT_SECRET_KEY: ${{ secrets.PRODUCTION_JWT_SECRET_KEY }}
        
    - name: Run health checks
      run: |
        echo "Running health checks on production..."
        chmod +x ./scripts/health-check.sh
        ./scripts/health-check.sh http://localhost http://localhost/api/v1
        
    - name: Notify deployment success
      run: |
        echo "Production deployment successful!"
        echo "ðŸŽ‰ Pokedex deployed to production with image: ghcr.io/${{ github.repository }}/pokedex:${{ github.sha }}"
